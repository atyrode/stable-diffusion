
PIPELINE / notes:

OK Générateur de prompt -> queue de prompts 
X [ prompt manuel -> queue de prompts avec prio+]

OK queue de prompt ->(consomme) stable diffusion -> output queue
OK ouput queue est consommé par bot.py
OK Bot.py -> DISCORD (images)
OK Discord -> bot_listener -> action -> queue prompt
X	   		   	  -> notation qualy


X DB -> enregistre -> prompts, uuid, note, date

X Front de lecture de la db et d'association avec l'image

----

A DEV:
OK - bot publisher(PromptQueue) -> génération de prompt
OK - bot consumer(PromptQueue) -> consommation des prompts par stable diffusion
X  -> systemctl managed
OK  -> Charge le modèle at start
OK  -> lance stable diffusion (avec le modèle)
X  -> LOG dans la DB
OK  -> akcknoledge queue

OK - bot send_to_discord
OK  -> image
X  -> get notes
X  -> update NOTE tables
~  -> update sent_to_discord

X - (nice to have) tool pour display l'image avec prompt, notes, etc...
X -> eventuellement recherche
X -> eventuellement ajout de commentaire, ajout de notes, etc...
X -> eventuellement relancer des trucs

---

DEV DE FOND
X -> Fine tune de stable diff

---

CLEVER :
OK - Queues
OK - PG (TABLE [log/result] id, prompt, uuid d'image, notes, date, sent_to_discrod(bool) // TABLE [NOTES] id, notes, commentaires...)
X - Storage object -> BACKUP images weekly (par ex)
